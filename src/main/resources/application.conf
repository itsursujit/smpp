akka {
  # Doc: https://doc.akka.io/docs/akka/current/general/configuration.html
  # We are interested in log messages from the akka* libs eg from JmsAckConsumer
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  # used during application start-up until normal logging is available
  stdout-loglevel = "DEBUG"

  # Limit file size to 60 MB in HttpFileEcho
  http.server.parsing.max-content-length = 62914560
  http.client.parsing.max-content-length = 62914560

  # Keep the connection alive in WebsocketEcho
  # see: https://doc.akka.io/docs/akka-http/current/server-side/websocket-support.html#automatic-keep-alive-ping-support
  # If not set, the connection would close on TCP idle-timeout (default is 1 minute)
  http.server.websocket.periodic-keep-alive-max-idle = 10 seconds

  # The shared Host Connection Pool is used in all akka http client examples eg HttpFileEchoStream, HTTPDownloadStream
  # see: https://doc.akka.io/docs/akka-http/current/client-side/host-level.html
  http.host-connection-pool {
    max-connections = 10
    max-retries = 5
  }
}
streamz.camel.consumer.receive.timeout = 10s

# Custom dispatcher used in actor.BlockingRight
custom-dispatcher-for-blocking {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 1
}

smpp {
  tls {
    enabled-protocols = ["TLSv1", "TLSv1.1", "TLSv1.2"]
    enabled-cipher-suites = [
      "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
      "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
      "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
      "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256",
      "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
      "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
      "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
      "TLS_RSA_WITH_AES_256_CBC_SHA256",
      "TLS_RSA_WITH_AES_256_CBC_SHA",
      "TLS_RSA_WITH_AES_128_CBC_SHA256",
      "TLS_RSA_WITH_AES_128_CBC_SHA",
      "TLS_EMPTY_RENEGOTIATION_INFO_SCSV"
    ]
    verify-hostname = false
  }

  protocol {
    min-pdu-length = 16 # length of header-only PDU
    max-pdu-length = 7424
  }

}
